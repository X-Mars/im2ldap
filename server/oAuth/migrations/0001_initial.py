# Generated by Django 5.1.7 on 2025-03-22 07:04

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DingTalkConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=100, verbose_name='Client ID')),
                ('client_secret', models.CharField(max_length=100, verbose_name='Client Secret')),
                ('app_id', models.CharField(max_length=100, verbose_name='APP ID')),
                ('redirect_uri', models.URLField(blank=True, max_length=500, null=True, verbose_name='回调域名')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '钉钉配置',
                'verbose_name_plural': '钉钉配置',
            },
        ),
        migrations.CreateModel(
            name='FeiShuConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('app_id', models.CharField(max_length=100, verbose_name='应用ID')),
                ('app_secret', models.CharField(max_length=100, verbose_name='应用密钥')),
                ('redirect_uri', models.URLField(blank=True, max_length=500, null=True, verbose_name='回调域名')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '飞书配置',
                'verbose_name_plural': '飞书配置',
            },
        ),
        migrations.CreateModel(
            name='GiteeConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=255, verbose_name='Client ID')),
                ('client_secret', models.CharField(max_length=255, verbose_name='Client Secret')),
                ('redirect_uri', models.CharField(blank=True, max_length=255, verbose_name='重定向URI')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'Gitee 配置',
                'verbose_name_plural': 'Gitee 配置',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GitHubConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=100, verbose_name='Client ID')),
                ('client_secret', models.CharField(max_length=100, verbose_name='Client Secret')),
                ('redirect_uri', models.URLField(blank=True, max_length=500, null=True, verbose_name='回调域名')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'GitHub配置',
                'verbose_name_plural': 'GitHub配置',
            },
        ),
        migrations.CreateModel(
            name='GitLabConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=255, verbose_name='Client ID')),
                ('client_secret', models.CharField(max_length=255, verbose_name='Client Secret')),
                ('redirect_uri', models.CharField(blank=True, max_length=255, verbose_name='重定向URI')),
                ('gitlab_server', models.CharField(default='https://gitlab.com', max_length=255, verbose_name='GitLab 服务器地址')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'GitLab 配置',
                'verbose_name_plural': 'GitLab 配置',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoogleConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=100, verbose_name='Client ID')),
                ('client_secret', models.CharField(max_length=100, verbose_name='Client Secret')),
                ('redirect_uri', models.URLField(blank=True, max_length=500, null=True, verbose_name='回调域名')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': 'Google配置',
                'verbose_name_plural': 'Google配置',
            },
        ),
        migrations.CreateModel(
            name='WeComConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('corp_id', models.CharField(max_length=100, verbose_name='企业ID')),
                ('agent_id', models.CharField(max_length=100, verbose_name='应用ID')),
                ('secret', models.CharField(max_length=100, verbose_name='应用密钥')),
                ('redirect_uri', models.URLField(blank=True, max_length=500, null=True, verbose_name='回调域名')),
                ('enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '企业微信配置',
                'verbose_name_plural': '企业微信配置',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('user', '普通用户'), ('admin', '管理员'), ('superuser', '超级管理员')], default='user', max_length=20, verbose_name='角色')),
                ('avatar', models.URLField(blank=True, max_length=500, null=True, verbose_name='头像')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_active_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='最后活跃时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='oauth_user_set', related_query_name='oauth_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='oauth_user_set', related_query_name='oauth_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='GiteeUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gitee_id', models.CharField(max_length=50, unique=True, verbose_name='Gitee ID')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='姓名')),
                ('username', models.CharField(blank=True, max_length=100, verbose_name='用户名')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='邮箱')),
                ('avatar_url', models.URLField(blank=True, verbose_name='头像')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gitee_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Gitee 用户',
                'verbose_name_plural': 'Gitee 用户',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GitHubUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('github_id', models.CharField(max_length=100, unique=True, verbose_name='GitHub ID')),
                ('login', models.CharField(max_length=100, verbose_name='GitHub用户名')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='GitHub昵称')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='GitHub邮箱')),
                ('avatar_url', models.URLField(blank=True, null=True, verbose_name='头像URL')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='个人简介')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='所在地')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='github_user', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': 'GitHub用户',
                'verbose_name_plural': 'GitHub用户',
            },
        ),
        migrations.CreateModel(
            name='GitLabUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gitlab_id', models.CharField(max_length=100, unique=True, verbose_name='GitLab ID')),
                ('username', models.CharField(max_length=100, verbose_name='用户名')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='邮箱')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='姓名')),
                ('avatar_url', models.URLField(blank=True, null=True, verbose_name='头像URL')),
                ('web_url', models.URLField(blank=True, null=True, verbose_name='个人主页')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gitlab_user', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': 'GitLab用户',
                'verbose_name_plural': 'GitLab用户',
            },
        ),
        migrations.CreateModel(
            name='GoogleUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('google_id', models.CharField(max_length=100, unique=True, verbose_name='Google ID')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='邮箱')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='姓名')),
                ('given_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='名')),
                ('family_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='姓')),
                ('picture', models.URLField(blank=True, null=True, verbose_name='头像URL')),
                ('locale', models.CharField(blank=True, max_length=10, null=True, verbose_name='语言')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='google_user', to=settings.AUTH_USER_MODEL, verbose_name='关联用户')),
            ],
            options={
                'verbose_name': 'Google用户',
                'verbose_name_plural': 'Google用户',
            },
        ),
        migrations.CreateModel(
            name='OAuthConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(max_length=50)),
                ('client_id', models.CharField(max_length=255)),
                ('client_secret', models.CharField(max_length=255)),
                ('redirect_uri', models.CharField(max_length=255)),
                ('is_enabled', models.BooleanField(default=True)),
            ],
            options={
                'unique_together': {('provider',)},
            },
        ),
        migrations.CreateModel(
            name='DingTalkUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('open_id', models.CharField(max_length=100, verbose_name='钉钉用户ID')),
                ('union_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='统一ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='姓名')),
                ('avatar', models.URLField(blank=True, max_length=500, null=True, verbose_name='头像')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='手机号')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='邮箱')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='职位')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女'), ('unknown', '未知')], default='unknown', max_length=10, verbose_name='性别')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='部门')),
                ('job_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='工号')),
                ('status', models.CharField(choices=[('active', '在职'), ('inactive', '离职'), ('pending', '待确认')], default='pending', max_length=20, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dingtalk_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '钉钉用户',
                'verbose_name_plural': '钉钉用户',
                'unique_together': {('open_id',)},
            },
        ),
        migrations.CreateModel(
            name='FeiShuUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('open_id', models.CharField(max_length=100, verbose_name='飞书用户ID')),
                ('union_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='统一ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='姓名')),
                ('avatar', models.URLField(blank=True, max_length=500, null=True, verbose_name='头像')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='手机号')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='邮箱')),
                ('tenant_key', models.CharField(blank=True, max_length=100, null=True, verbose_name='企业标识')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feishu_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '飞书用户',
                'verbose_name_plural': '飞书用户',
                'unique_together': {('open_id',)},
            },
        ),
        migrations.CreateModel(
            name='WeComUser',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('wecom_user_id', models.CharField(max_length=100, verbose_name='企业微信用户ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='姓名')),
                ('avatar', models.URLField(blank=True, max_length=500, null=True, verbose_name='头像')),
                ('qr_code', models.URLField(blank=True, max_length=500, null=True, verbose_name='二维码')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='手机号')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='邮箱')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='地址')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='职位')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女'), ('unknown', '未知')], default='unknown', max_length=10, verbose_name='性别')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='部门')),
                ('status', models.CharField(choices=[('active', '在职'), ('inactive', '离职'), ('pending', '待确认')], default='pending', max_length=20, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wecom_info', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '企业微信用户',
                'verbose_name_plural': '企业微信用户',
                'unique_together': {('wecom_user_id',)},
            },
        ),
    ]
